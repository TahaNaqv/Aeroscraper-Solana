
taha@HP-Probook:~/Documents/Projects/Aeroscraper/aerospacer-solana$ anchor build 
`anchor` 0.28.0 is not installed with `avm`. Installing...

    Updating git repository `https://github.com/coral-xyz/anchor`
warning: skipping duplicate package `shared` found at `/home/taha/.cargo/git/checkouts/anchor-50c4b9c8b5e0501f/e1afcbf/tests/misc/programs/shared`
warning: skipping duplicate package `shared` found at `/home/taha/.cargo/git/checkouts/anchor-50c4b9c8b5e0501f/e1afcbf/tests/zero-copy/programs/shared`
warning: skipping duplicate package `swap` found at `/home/taha/.cargo/git/checkouts/anchor-50c4b9c8b5e0501f/e1afcbf/tests/swap/programs/swap`
warning: virtual workspace defaulting to `resolver = "1"` despite one or more workspace members being on edition 2021 which implies `resolver = "2"`
note: to keep the current resolver, specify `workspace.resolver = "1"` in the workspace root's manifest
note: to use the edition 2021 resolver, specify `workspace.resolver = "2"` in the workspace root's manifest
note: for more details see https://doc.rust-lang.org/cargo/reference/resolver.html#resolver-versions
error: binary `anchor` already exists in destination
Add --force to overwrite
Error: Failed to install 0.28.0, is it a valid version?
Failed to install `anchor` 0.28.0, using 0.31.1 instead
   Compiling aerospacer-oracle v0.1.0 (/home/taha/Documents/Projects/Aeroscraper/aerospacer-solana/programs/aerospacer-oracle)
warning: ambiguous glob re-exports
  --> programs/aerospacer-oracle/src/instructions/mod.rs:14:9
   |
14 | pub use initialize::*;
   |         ^^^^^^^^^^^^^ the name `handler` in the value namespace is first re-exported here
...
25 | pub use update_pyth_price::*;
   |         -------------------- but the name `handler` in the value namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: use of deprecated function `pyth_sdk_solana::load_price_feed_from_account_info`: solana-specific, use SolanaPriceAccount::account_info_to_feed instead.
 --> programs/aerospacer-oracle/src/instructions/get_price.rs:4:22
  |
4 | use pyth_sdk_solana::load_price_feed_from_account_info;
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(deprecated)]` on by default

warning: use of deprecated function `pyth_sdk_solana::load_price_feed_from_account_info`: solana-specific, use SolanaPriceAccount::account_info_to_feed instead.
  --> programs/aerospacer-oracle/src/instructions/get_price.rs:94:22
   |
94 |     let price_feed = load_price_feed_from_account_info(&ctx.accounts.pyth_price_account)
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated function `pyth_sdk_solana::load_price_feed_from_account_info`: solana-specific, use SolanaPriceAccount::account_info_to_feed instead.
 --> programs/aerospacer-oracle/src/instructions/get_all_prices.rs:4:22
  |
4 | use pyth_sdk_solana::load_price_feed_from_account_info;
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated function `pyth_sdk_solana::load_price_feed_from_account_info`: solana-specific, use SolanaPriceAccount::account_info_to_feed instead.
   --> programs/aerospacer-oracle/src/instructions/get_all_prices.rs:113:26
    |
113 |         let price_feed = load_price_feed_from_account_info(pyth_price_account)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated function `pyth_sdk_solana::load_price_feed_from_account_info`: solana-specific, use SolanaPriceAccount::account_info_to_feed instead.
 --> programs/aerospacer-oracle/src/instructions/update_pyth_price.rs:4:22
  |
4 | use pyth_sdk_solana::load_price_feed_from_account_info;
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated function `pyth_sdk_solana::load_price_feed_from_account_info`: solana-specific, use SolanaPriceAccount::account_info_to_feed instead.
  --> programs/aerospacer-oracle/src/instructions/update_pyth_price.rs:74:22
   |
74 |     let price_feed = load_price_feed_from_account_info(&ctx.accounts.pyth_price_account)
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated method `anchor_lang::prelude::AccountInfo::<'a>::realloc`: Use AccountInfo::resize() instead
  --> programs/aerospacer-oracle/src/lib.rs:21:1
   |
21 | #[program]
   | ^^^^^^^^^^
   |
   = note: this warning originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `aerospacer-oracle` (lib) generated 8 warnings
    Finished `release` profile [optimized] target(s) in 3.43s
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.21s
     Running unittests src/lib.rs (/home/taha/Documents/Projects/Aeroscraper/aerospacer-solana/target/debug/deps/aerospacer_oracle-229a9b501a96c94f)
   Compiling aerospacer-oracle v0.1.0 (/home/taha/Documents/Projects/Aeroscraper/aerospacer-solana/programs/aerospacer-oracle)
   Compiling aerospacer-fees v0.1.0 (/home/taha/Documents/Projects/Aeroscraper/aerospacer-solana/programs/aerospacer-fees)
warning: ambiguous glob re-exports
  --> programs/aerospacer-fees/src/instructions/mod.rs:7:9
   |
7  | pub use initialize::*;
   |         ^^^^^^^^^^^^^ the name `handler` in the value namespace is first re-exported here
...
11 | pub use get_config::*; 
   |         ------------- but the name `handler` in the value namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: ambiguous glob re-exports
  --> programs/aerospacer-oracle/src/instructions/mod.rs:14:9
   |
14 | pub use initialize::*;
   |         ^^^^^^^^^^^^^ the name `handler` in the value namespace is first re-exported here
...
25 | pub use update_pyth_price::*;
   |         -------------------- but the name `handler` in the value namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: use of deprecated function `pyth_sdk_solana::load_price_feed_from_account_info`: solana-specific, use SolanaPriceAccount::account_info_to_feed instead.
 --> programs/aerospacer-oracle/src/instructions/get_price.rs:4:22
  |
4 | use pyth_sdk_solana::load_price_feed_from_account_info;
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(deprecated)]` on by default

warning: use of deprecated function `pyth_sdk_solana::load_price_feed_from_account_info`: solana-specific, use SolanaPriceAccount::account_info_to_feed instead.
  --> programs/aerospacer-oracle/src/instructions/get_price.rs:94:22
   |
94 |     let price_feed = load_price_feed_from_account_info(&ctx.accounts.pyth_price_account)
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated function `pyth_sdk_solana::load_price_feed_from_account_info`: solana-specific, use SolanaPriceAccount::account_info_to_feed instead.
 --> programs/aerospacer-oracle/src/instructions/get_all_prices.rs:4:22
  |
4 | use pyth_sdk_solana::load_price_feed_from_account_info;
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated function `pyth_sdk_solana::load_price_feed_from_account_info`: solana-specific, use SolanaPriceAccount::account_info_to_feed instead.
   --> programs/aerospacer-oracle/src/instructions/get_all_prices.rs:113:26
    |
113 |         let price_feed = load_price_feed_from_account_info(pyth_price_account)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated function `pyth_sdk_solana::load_price_feed_from_account_info`: solana-specific, use SolanaPriceAccount::account_info_to_feed instead.
 --> programs/aerospacer-oracle/src/instructions/update_pyth_price.rs:4:22
  |
4 | use pyth_sdk_solana::load_price_feed_from_account_info;
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated function `pyth_sdk_solana::load_price_feed_from_account_info`: solana-specific, use SolanaPriceAccount::account_info_to_feed instead.
  --> programs/aerospacer-oracle/src/instructions/update_pyth_price.rs:74:22
   |
74 |     let price_feed = load_price_feed_from_account_info(&ctx.accounts.pyth_price_account)
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated method `anchor_lang::prelude::AccountInfo::<'a>::realloc`: Use AccountInfo::resize() instead
  --> programs/aerospacer-fees/src/lib.rs:13:1
   |
13 | #[program]
   | ^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default
   = note: this warning originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated method `anchor_lang::prelude::AccountInfo::<'a>::realloc`: Use AccountInfo::resize() instead
  --> programs/aerospacer-oracle/src/lib.rs:21:1
   |
21 | #[program]
   | ^^^^^^^^^^
   |
   = note: this warning originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `aerospacer-fees` (lib) generated 2 warnings
warning: `aerospacer-oracle` (lib) generated 8 warnings
   Compiling aerospacer-protocol v0.1.0 (/home/taha/Documents/Projects/Aeroscraper/aerospacer-solana/programs/aerospacer-protocol)
warning: unexpected `cfg` condition value: `cpi`
  --> programs/aerospacer-protocol/src/lib.rs:24:1
   |
24 | #[program]
   | ^^^^^^^^^^
   |
   = note: expected values for `feature` are: `anchor-debug`, `default`, `idl-build`, `init-if-needed`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`
   = help: consider adding `cpi` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default
   = note: this warning originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `custom-heap`
  --> programs/aerospacer-protocol/src/lib.rs:24:1
   |
24 | #[program]
   | ^^^^^^^^^^
   |
   = note: expected values for `feature` are: `anchor-debug`, `default`, `idl-build`, `init-if-needed`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`
   = help: consider adding `custom-heap` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `$crate::custom_heap_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `custom-panic`
  --> programs/aerospacer-protocol/src/lib.rs:24:1
   |
24 | #[program]
   | ^^^^^^^^^^
   |
   = note: expected values for `feature` are: `anchor-debug`, `default`, `idl-build`, `init-if-needed`, `no-entrypoint`, `no-idl`, and `no-log-ix-name`
   = help: consider adding `custom-panic` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `$crate::custom_panic_default` which comes from the expansion of the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `PriceResponse`
 --> programs/aerospacer-protocol/src/query/mod.rs:8:72
  |
8 | use crate::utils::{get_liquidation_gains, query_all_collateral_prices, PriceResponse};
  |                                                                        ^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `crate::state::*`
 --> programs/aerospacer-protocol/src/oracle.rs:3:5
  |
3 | use crate::state::*;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `crate::error::*`
 --> programs/aerospacer-protocol/src/instructions/initialize.rs:3:5
  |
3 | use crate::error::*;
  |     ^^^^^^^^^^^^^^^

warning: unused imports: `Mint` and `Transfer`
 --> programs/aerospacer-protocol/src/instructions/open_trove.rs:2:46
  |
2 | use anchor_spl::token::{Token, TokenAccount, Mint, MintTo, Transfer};
  |                                              ^^^^          ^^^^^^^^

warning: unused import: `crate::trove_management::*`
 --> programs/aerospacer-protocol/src/instructions/open_trove.rs:7:5
  |
7 | use crate::trove_management::*;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `DECIMAL_FRACTION_18`
 --> programs/aerospacer-protocol/src/instructions/open_trove.rs:9:20
  |
9 | use crate::state::{DECIMAL_FRACTION_18, MINIMUM_LOAN_AMOUNT, MINIMUM_COLLATERAL_AMOUNT};
  |                    ^^^^^^^^^^^^^^^^^^^

warning: type `Open_troveParams` should have an upper camel case name
  --> programs/aerospacer-protocol/src/instructions/open_trove.rs:17:12
   |
17 | pub struct Open_troveParams {
   |            ^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `OpenTroveParams`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: type `Open_trove` should have an upper camel case name
  --> programs/aerospacer-protocol/src/instructions/open_trove.rs:25:12
   |
25 | pub struct Open_trove<'info> {
   |            ^^^^^^^^^^ help: convert the identifier to upper camel case: `OpenTrove`

warning: unused import: `Mint`
 --> programs/aerospacer-protocol/src/instructions/borrow_loan.rs:2:46
  |
2 | use anchor_spl::token::{Token, TokenAccount, Mint, MintTo};
  |                                              ^^^^

warning: unused imports: `Mint` and `Transfer`
 --> programs/aerospacer-protocol/src/instructions/repay_loan.rs:2:46
  |
2 | use anchor_spl::token::{Token, TokenAccount, Mint, Transfer, Burn};
  |                                              ^^^^  ^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> programs/aerospacer-protocol/src/instructions/liquidate_troves.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Burn`
 --> programs/aerospacer-protocol/src/instructions/liquidate_troves.rs:3:38
  |
3 | use anchor_spl::token::{Token, Mint, Burn};
  |                                      ^^^^

warning: unused import: `crate::fees_integration::*`
 --> programs/aerospacer-protocol/src/instructions/liquidate_troves.rs:9:5
  |
9 | use crate::fees_integration::*;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::utils::*`
  --> programs/aerospacer-protocol/src/instructions/liquidate_troves.rs:10:5
   |
10 | use crate::utils::*;
   |     ^^^^^^^^^^^^^^^

warning: type `Withdraw_liquidation_gainsParams` should have an upper camel case name
 --> programs/aerospacer-protocol/src/instructions/withdraw_liquidation_gains.rs:8:12
  |
8 | pub struct Withdraw_liquidation_gainsParams {
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `WithdrawLiquidationGainsParams`

warning: type `Withdraw_liquidation_gains` should have an upper camel case name
  --> programs/aerospacer-protocol/src/instructions/withdraw_liquidation_gains.rs:14:12
   |
14 | pub struct Withdraw_liquidation_gains<'info> {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `WithdrawLiquidationGains`

warning: unused import: `std::collections::HashMap`
 --> programs/aerospacer-protocol/src/instructions/redeem.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Mint`
 --> programs/aerospacer-protocol/src/instructions/redeem.rs:3:46
  |
3 | use anchor_spl::token::{Token, TokenAccount, Mint, Transfer, Burn};
  |                                              ^^^^

warning: unused import: `crate::utils::*`
 --> programs/aerospacer-protocol/src/instructions/redeem.rs:5:5
  |
5 | use crate::utils::*;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `crate::trove_management::*`
 --> programs/aerospacer-protocol/src/instructions/redeem.rs:7:5
  |
7 | use crate::trove_management::*;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::account_management::*`
 --> programs/aerospacer-protocol/src/instructions/redeem.rs:8:5
  |
8 | use crate::account_management::*;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::oracle::*`
 --> programs/aerospacer-protocol/src/instructions/redeem.rs:9:5
  |
9 | use crate::oracle::*;
  |     ^^^^^^^^^^^^^^^^

warning: ambiguous glob re-exports
  --> programs/aerospacer-protocol/src/instructions/mod.rs:15:9
   |
15 | pub use initialize::*;
   |         ^^^^^^^^^^^^^ the name `handler` in the value namespace is first re-exported here
...
27 | pub use redeem::*; 
   |         --------- but the name `handler` in the value namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: use of deprecated method `anchor_lang::prelude::AccountInfo::<'a>::realloc`: Use AccountInfo::resize() instead
  --> programs/aerospacer-protocol/src/lib.rs:24:1
   |
24 | #[program]
   | ^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default
   = note: this warning originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused variable: `sorted_troves_state`
   --> programs/aerospacer-protocol/src/query/mod.rs:105:5
    |
105 |     sorted_troves_state: &Account<SortedTrovesState>,
    |     ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_sorted_troves_state`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `icr`
   --> programs/aerospacer-protocol/src/query/mod.rs:106:5
    |
106 |     icr: u64, // Equivalent to Decimal256
    |     ^^^ help: if this is intentional, prefix it with an underscore: `_icr`

warning: unused variable: `prev_node_id`
   --> programs/aerospacer-protocol/src/query/mod.rs:107:5
    |
107 |     prev_node_id: Option<Pubkey>,
    |     ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_prev_node_id`

warning: unused variable: `next_node_id`
   --> programs/aerospacer-protocol/src/query/mod.rs:108:5
    |
108 |     next_node_id: Option<Pubkey>,
    |     ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_next_node_id`

warning: unused variable: `denom`
   --> programs/aerospacer-protocol/src/account_management.rs:240:14
    |
240 |         for (denom, amount) in &collateral_amounts {
    |              ^^^^^ help: if this is intentional, prefix it with an underscore: `_denom`

warning: unused variable: `collateral_ctx`
   --> programs/aerospacer-protocol/src/trove_management.rs:450:9
    |
450 |         collateral_ctx: &mut CollateralContext,
    |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_collateral_ctx`

warning: unused variable: `oracle_ctx`
   --> programs/aerospacer-protocol/src/trove_management.rs:451:9
    |
451 |         oracle_ctx: &OracleContext,
    |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_oracle_ctx`

warning: unused variable: `sorted_ctx`
   --> programs/aerospacer-protocol/src/instructions/open_trove.rs:248:13
    |
248 |     let mut sorted_ctx = SortedTrovesContext {
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_sorted_ctx`

warning: variable does not need to be mutable
   --> programs/aerospacer-protocol/src/instructions/open_trove.rs:248:9
    |
248 |     let mut sorted_ctx = SortedTrovesContext {
    |         ----^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> programs/aerospacer-protocol/src/instructions/add_collateral.rs:147:9
    |
147 |     let mut sorted_ctx = SortedTrovesContext {
    |         ----^^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> programs/aerospacer-protocol/src/instructions/remove_collateral.rs:143:9
    |
143 |     let mut sorted_ctx = SortedTrovesContext {
    |         ----^^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> programs/aerospacer-protocol/src/instructions/borrow_loan.rs:184:9
    |
184 |     let mut sorted_ctx = SortedTrovesContext {
    |         ----^^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> programs/aerospacer-protocol/src/instructions/repay_loan.rs:161:9
    |
161 |     let mut sorted_ctx = SortedTrovesContext {
    |         ----^^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> programs/aerospacer-protocol/src/instructions/liquidate_troves.rs:144:9
    |
144 |     let mut sorted_ctx = SortedTrovesContext {
    |         ----^^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `state`
  --> programs/aerospacer-protocol/src/instructions/withdraw_liquidation_gains.rs:74:9
   |
74 |     let state = &mut ctx.accounts.state;
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `sorted_troves_state`
   --> programs/aerospacer-protocol/src/instructions/redeem.rs:627:5
    |
627 |     sorted_troves_state: &Account<SortedTrovesState>,
    |     ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_sorted_troves_state`

warning: unused variable: `denom`
   --> programs/aerospacer-protocol/src/utils/mod.rs:310:5
    |
310 |     denom: &str,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_denom`

warning: unused variable: `remaining_accounts`
   --> programs/aerospacer-protocol/src/utils/mod.rs:312:5
    |
312 |     remaining_accounts: &[AccountInfo],
    |     ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_remaining_accounts`

warning: unused variable: `collateral_to_liquidate`
   --> programs/aerospacer-protocol/src/utils/mod.rs:382:9
    |
382 |     let collateral_to_liquidate = safe_div(
    |         ^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_collateral_to_liquidate`

warning: variable does not need to be mutable
   --> programs/aerospacer-protocol/src/utils/mod.rs:465:9
    |
465 |     let mut collateral_amounts: Vec<(String, u64)> = Vec::new();
    |         ----^^^^^^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`

Error: Function _ZN169_$LT$aerospacer_protocol..instructions..open_trove..Open_trove$u20$as$u20$anchor_lang..Accounts$LT$aerospacer_protocol..instructions..open_trove..Open_troveBumps$GT$$GT$12try_accounts17h56a69d3c8274cd57E Stack offset of 5200 exceeded max offset of 4096 by 1104 bytes, please minimize large stack variables. Estimated function frame size: 5632 bytes. Exceeding the maximum stack offset may cause undefined behavior during execution.

Error: Function _ZN171_$LT$aerospacer_protocol..instructions..borrow_loan..BorrowLoan$u20$as$u20$anchor_lang..Accounts$LT$aerospacer_protocol..instructions..borrow_loan..BorrowLoanBumps$GT$$GT$12try_accounts17h81133386e16452f4E Stack offset of 4104 exceeded max offset of 4096 by 8 bytes, please minimize large stack variables. Estimated function frame size: 4288 bytes. Exceeding the maximum stack offset may cause undefined behavior during execution.

Error: Function _ZN171_$LT$aerospacer_protocol..instructions..close_trove..CloseTrove$u20$as$u20$anchor_lang..Accounts$LT$aerospacer_protocol..instructions..close_trove..CloseTroveBumps$GT$$GT$12try_accounts17h458615428e8a9446E Stack offset of 4120 exceeded max offset of 4096 by 24 bytes, please minimize large stack variables. Estimated function frame size: 4224 bytes. Exceeding the maximum stack offset may cause undefined behavior during execution.

Error: Function _ZN153_$LT$aerospacer_protocol..instructions..redeem..Redeem$u20$as$u20$anchor_lang..Accounts$LT$aerospacer_protocol..instructions..redeem..RedeemBumps$GT$$GT$12try_accounts17hb2e41a832d057012E Stack offset of 4112 exceeded max offset of 4096 by 16 bytes, please minimize large stack variables. Estimated function frame size: 4416 bytes. Exceeding the maximum stack offset may cause undefined behavior during execution.

warning: `aerospacer-protocol` (lib) generated 47 warnings (run `cargo fix --lib -p aerospacer-protocol` to apply 25 suggestions)
    Finished `release` profile [optimized] target(s) in 16.01s
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.17s
     Running unittests src/lib.rs (/home/taha/Documents/Projects/Aeroscraper/aerospacer-solana/target/debug/deps/aerospacer_protocol-889ac5130c6fb2da)
   Compiling aerospacer-fees v0.1.0 (/home/taha/Documents/Projects/Aeroscraper/aerospacer-solana/programs/aerospacer-fees)
warning: ambiguous glob re-exports
  --> programs/aerospacer-fees/src/instructions/mod.rs:7:9
   |
7  | pub use initialize::*;
   |         ^^^^^^^^^^^^^ the name `handler` in the value namespace is first re-exported here
...
11 | pub use get_config::*; 
   |         ------------- but the name `handler` in the value namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: use of deprecated method `anchor_lang::prelude::AccountInfo::<'a>::realloc`: Use AccountInfo::resize() instead
  --> programs/aerospacer-fees/src/lib.rs:13:1
   |
13 | #[program]
   | ^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default
   = note: this warning originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `aerospacer-fees` (lib) generated 2 warnings
    Finished `release` profile [optimized] target(s) in 2.34s
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.16s
     Running unittests src/lib.rs (/home/taha/Documents/Projects/Aeroscraper/aerospacer-solana/target/debug/deps/aerospacer_fees-e8568a44fae296dc)
taha@HP-Probook:~/Documents/Projects/Aeroscraper/aerospacer-solana$ 